<?xml version="1.0" encoding="UTF-8"?><testrun name="com.droidbrew.oodp.stategy.spec" project="CompensationCalculator" tests="7" started="7" failures="1" errors="0" ignored="0">
  <testsuite name="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.012">
    <testcase name="testOvertimeSalaryOnWorkingDay" classname="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.002"/>
    <testcase name="testShiftSalaryOnWorkingDay" classname="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.0"/>
    <testcase name="testShiftSalaryOnWeekend" classname="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.001"/>
    <testcase name="testOvertimeSalaryOnWeekend" classname="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.0"/>
    <testcase name="testNegativeInput" classname="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.001"/>
    <testcase name="testGT24HoursInput" classname="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.005">
      <failure>java.lang.AssertionError: expected:&lt;-1.0&gt; but was:&lt;420.0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:93)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:647)&#13;
	at org.junit.Assert.assertEquals(Assert.java:443)&#13;
	at org.junit.Assert.assertEquals(Assert.java:512)&#13;
	at com.droidbrew.oodp.stategy.spec.DailyCompensations.testGT24HoursInput(DailyCompensations.java:44)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testZeroInput" classname="com.droidbrew.oodp.stategy.spec.DailyCompensations" time="0.002"/>
  </testsuite>
</testrun>
